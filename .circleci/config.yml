### =============================================================
### This configuration file is used by CircleCI build server
### https://circleci.com/docs/config-sample
### =============================================================

version: 2

### COMMON CONFIG FOR ALL JOBS
common: &common
  steps:
    - checkout
    # Restore the Cache (if there is one).
    # the v1 prefix is used to intentionally invalidate the cache if required. Just increment and commit for
    # instant cache invalidation.
    # https://circleci.com/docs/2.0/caching/#clearing-cache
    # https://support.circleci.com/hc/en-us/articles/115015426888-Clear-project-cache
    - restore_cache:
        keys:
          - v3-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}-{{ checksum "requirements.txt" }}
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - run:
        name: upload coverage report
        command: |
          if [[ "$UPLOAD_COVERAGE" != 0 ]]; then
            pip install --user codecov
            # Retry upload until success (sometimes we get a timeout)
            n=0
            until [ $n -ge 5 ]
            do
              # The break at the end means if the command succeeds then we break out of the loop.
              ~/.local/bin/codecov --required -X search gcov pycov -f coverage.xml --flags $CIRCLE_JOB && break
              n=$[$n+1]
              sleep 5
            done
          fi
    # Save the Cache to save time next time
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
        key: v3-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}-{{ checksum "requirements.txt" }}
    # Store test reports for circle
    - store_test_results:
        path: .test-reports
    - store_artifacts:
        path: .test-reports

### JOBS
jobs:
  linting:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          - TOXENV=linting
          - UPLOAD_COVERAGE=0
  doclinting:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          - TOXENV=doclinting
          - UPLOAD_COVERAGE=0
  py35:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35
  py36:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36
  py37:
    <<: *common
    docker:
      - image: circleci/python:3.7
        environment:
          TOXENV=py37
  py38:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV=py38
  py39:
    <<: *common
    docker:
      - image: circleci/python:3.9-rc
        environment:
          TOXENV=py39
  # Benchmarking task
  bench:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV=bench
  mypy:
    <<: *common
    docker:
      - image: circleci/python:3.8
        environment:
          TOXENV=mypy


### Workflows which call the different tox jobs
workflows:
  version: 2
  test-sqlfluff:
    jobs:
      - linting
      - doclinting
      - mypy
      - py35
      - py36
      - py37
      - py38
      - py39
      - bench
